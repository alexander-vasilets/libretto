<Window x:Class="Libretto.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"

        Title="Libretto"
        SizeToContent="WidthAndHeight">
    <Window.Resources>
        <BitmapImage x:Key="trashBin" UriSource="../Resources/trashBin.png"/>
        <BitmapImage x:Key="error" UriSource="../Resources/error.png"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <Image Source="{StaticResource error}" Width="24" Height="24" RenderOptions.BitmapScalingMode="Fant" 
                       DockPanel.Dock="Left" Margin="0 0 10 0" ToolTip="{Binding ErrorContent}"/>
                <Border BorderBrush="Red" BorderThickness="1.0">
                    <AdornedElementPlaceholder />
                </Border>
            </DockPanel>
        </ControlTemplate>
    </Window.Resources>
    <DockPanel>
        <!-- Book list -->
        <ScrollViewer DockPanel.Dock="Top" Margin="5" MinWidth="600" MaxHeight="600">
            <ItemsControl x:Name="bookList" ItemsSource="{Binding Books}" VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <DockPanel>
                            <Image DockPanel.Dock="Left" Source="{StaticResource trashBin}" Width="32" Height="32" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   RenderOptions.BitmapScalingMode="Fant">
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="PreviewMouseDown">
                                        <behaviors:InvokeCommandAction Command="{Binding DataContext.DeleteBookCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding Id}"/>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </Image>
                            <Border BorderThickness="1.0" CornerRadius="2.0" BorderBrush="Black" Padding="5" Margin="5">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                <Setter Property="Background" Value="AliceBlue"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                <Setter Property="Background" Value="Transparent"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="MouseDown">
                                        <behaviors:InvokeCommandAction Command="{Binding DataContext.SelectUnselectBookCommand, RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Title: " FontWeight="Bold" />
                                        <TextBlock Text="{Binding Title}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="Author: " FontWeight="Bold"/>
                                        <TextBlock Text="{Binding AuthorName}" />
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </DockPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        
        <!-- Book info -->
        <Border DockPanel.Dock="Bottom" BorderThickness="1.0" CornerRadius="2.0" BorderBrush="Black" Padding="5" Margin="5" VerticalAlignment="Bottom" MaxWidth="800" Height="150">
            <DockPanel>
                <StackPanel Orientation="Vertical" DockPanel.Dock="Top" DataContext="{Binding CurrentBook, ValidatesOnNotifyDataErrors=False}">
                    <DockPanel Margin="0 10 0 0">
                        <Label Content="_Title" Target="{Binding ElementName=titleTextBox}" Width="100"/>
                        <TextBox x:Name="titleTextBox" Text="{Binding Title}" VerticalContentAlignment="Center" Validation.ErrorTemplate="{StaticResource validationTemplate}" />
                    </DockPanel>
                    <DockPanel Margin="0 10 0 0">
                        <Label Content="_Author" Target="{Binding ElementName=authorTextBox}" Width="100"/>
                        <TextBox x:Name="authorTextBox" Text="{Binding AuthorName}"  VerticalContentAlignment="Center" Validation.ErrorTemplate="{StaticResource validationTemplate}"/>
                    </DockPanel>
                </StackPanel>
                <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Margin="0 10 0 10" HorizontalAlignment="Center">
                    <Button Content="Update" Command="{Binding UpdateBookCommand}" Margin="0 0 10 0" IsEnabled="{Binding CanUpdate}"/>
                    <Button Content="Add" Command="{Binding AddBookCommand}" IsEnabled="{Binding CanAdd}"/>
                </StackPanel>
            </DockPanel>
        </Border>
    </DockPanel>
</Window>
